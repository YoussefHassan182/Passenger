// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Passenger.Infrastructure.Data;

#nullable disable

namespace Passenger.Infrastructure.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240503062454_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Passenger.Infrastructure.Data.Booking", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Book_Id"), 1L, 1);

                    b.Property<DateTime>("Book_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 3, 9, 24, 54, 464, DateTimeKind.Local).AddTicks(6386));

                    b.Property<string>("Book_Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Book_Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Book_EndPoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Book_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Book_StartPoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Book_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Book_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Book_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.HasKey("Book_Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.City", b =>
                {
                    b.Property<int>("ZipCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZipCode"), 1L, 1);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ZipCode");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Customer", b =>
                {
                    b.Property<int>("Cus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cus_Id"), 1L, 1);

                    b.Property<int>("CityZipCode")
                        .HasColumnType("int");

                    b.Property<string>("Cus_Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cus_Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Cus_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cus_Phone")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Cus_Id");

                    b.HasIndex("CityZipCode");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Payment", b =>
                {
                    b.Property<int>("Pay_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pay_Id"), 1L, 1);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pay_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Pay_Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pay_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 3, 9, 24, 54, 464, DateTimeKind.Local).AddTicks(7477));

                    b.Property<string>("Pay_Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Pay_Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Booking", b =>
                {
                    b.HasOne("Passenger.Infrastructure.Data.Customer", "Customer")
                        .WithMany("Booking")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.City", b =>
                {
                    b.HasOne("Passenger.Infrastructure.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Customer", b =>
                {
                    b.HasOne("Passenger.Infrastructure.Data.City", "City")
                        .WithMany()
                        .HasForeignKey("CityZipCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Payment", b =>
                {
                    b.HasOne("Passenger.Infrastructure.Data.Customer", "Customer")
                        .WithMany("Payment")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Passenger.Infrastructure.Data.Customer", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Payment");
                });
#pragma warning restore 612, 618
        }
    }
}
